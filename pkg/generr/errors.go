// Code generated by genmaps.go; DO NOT EDIT.

package generr

type Error struct {
	error
	Code errorCode         `json:"name"`
	Msg  string            `json:"message"`
	Url  string            `json:"url,omitempty"`
	Meta map[string]string `json:"metadata"`
}

func (e *Error) Error() string {
	return e.Msg
}

func FindByKey(key string) *Error {
	switch key {
	case "/contents/:ContentId/ngwords.404":
		return ErrApiGetContentsNotFound
	}

	return nil
}

type errorCode int

const (
	// None of the content could be retrieved.
	ErrCodeApiGetContentsNotFound errorCode = 11001

	// The query required to retrieve the content has not been specified.
	ErrCodeApiGetContentsInvalidQuery errorCode = 11002

	// There is an error in the parameters for content registration.
	ErrCodeApiPostContentsInvalidRequest errorCode = 12001

	// An error occurred with duplicate content registration.
	ErrCodeApiPostContentsDuplicatedError errorCode = 12002

	// Database connection could not be established
	ErrCodeDbConnectionRefused errorCode = 2001

	// Contents table does not exist
	ErrCodeDbContentsTableDoesNotExists errorCode = 21001
)

var (
	// None of the content could be retrieved.
	//
	// Reference: http://example.com/#/contents/GetContents
	ErrApiGetContentsNotFound = &Error{
		Code: ErrCodeApiGetContentsNotFound,
		Msg:  "None of the content could be retrieved.",
		Url:  "http://example.com/#/contents/GetContents",
	}

	// The query required to retrieve the content has not been specified.
	//
	// Reference: http://example.com/#/contents/GetContents
	ErrApiGetContentsInvalidQuery = &Error{
		Code: ErrCodeApiGetContentsInvalidQuery,
		Msg:  "The query required to retrieve the content has not been specified.",
		Url:  "http://example.com/#/contents/GetContents",
	}

	// There is an error in the parameters for content registration.
	//
	// Reference: http://example.com/#/contents/PostContents
	ErrApiPostContentsInvalidRequest = &Error{
		Code: ErrCodeApiPostContentsInvalidRequest,
		Msg:  "There is an error in the parameters for content registration.",
		Url:  "http://example.com/#/contents/PostContents",
	}

	// An error occurred with duplicate content registration.
	//
	// Reference: http://example.com/#/contents/PostContents
	ErrApiPostContentsDuplicatedError = &Error{
		Code: ErrCodeApiPostContentsDuplicatedError,
		Msg:  "An error occurred with duplicate content registration.",
		Url:  "http://example.com/#/contents/PostContents",
	}

	// Database connection could not be established
	//
	//    Metadata includes as follows:
	//      - status_code: 502
	ErrDbConnectionRefused = &Error{
		Code: ErrCodeDbConnectionRefused,
		Msg:  "Database connection could not be established",
		Meta: map[string]string{
			"status_code": "502",
		},
	}

	// Contents table does not exist
	//
	//    Metadata includes as follows:
	//      - status_code: 404
	ErrDbContentsTableDoesNotExists = &Error{
		Code: ErrCodeDbContentsTableDoesNotExists,
		Msg:  "Contents table does not exist",
		Meta: map[string]string{
			"status_code": "404",
		},
	}
)
